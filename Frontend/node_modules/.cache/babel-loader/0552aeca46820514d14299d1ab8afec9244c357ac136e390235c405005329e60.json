{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gv250\\\\OneDrive\\\\Escritorio\\\\Productos\\\\frontend\\\\src\\\\components\\\\Solicitud.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport '../css/Solicitud.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MedicalRequestForm = () => {\n  _s();\n  var _regions$find2;\n  const [currentStep, setCurrentStep] = useState(1);\n  const [location, setLocation] = useState({\n    region: '',\n    address: '',\n    coordinates: null,\n    confirmed: false\n  });\n  const [selectedMedications, setSelectedMedications] = useState([]);\n  const [priority, setPriority] = useState('');\n  const [medications, setMedications] = useState([]);\n  const [availableDrones, setAvailableDrones] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [userInfo, setUserInfo] = useState(null);\n  const mapRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const [marker, setMarker] = useState(null);\n\n  // Regiones disponibles\n  const regions = [{\n    value: 'amazonas',\n    label: 'Amazonas'\n  }, {\n    value: 'cusco',\n    label: 'Cusco'\n  }, {\n    value: 'puno',\n    label: 'Puno'\n  }, {\n    value: 'arequipa',\n    label: 'Arequipa'\n  }];\n\n  // Dolores/medicamentos disponibles\n  const availablePains = ['Dolor de cabeza', 'Fiebre', 'Dolor estomacal', 'Resfrío común', 'Presión alta', 'Diabetes', 'Dolor muscular', 'Alergias', 'Infección urinaria', 'Dolor de garganta'];\n\n  // Verificar autenticación del usuario al cargar el componente\n  useEffect(() => {\n    const checkUserAuth = () => {\n      try {\n        const userId = localStorage.getItem('userId');\n        const userEmail = localStorage.getItem('email');\n        const userName = localStorage.getItem('nombre');\n        const userRole = localStorage.getItem('rol');\n        if (!userId || !userEmail) {\n          setError('Usuario no autenticado. Por favor, inicia sesión.');\n          return;\n        }\n        setUserInfo({\n          id: parseInt(userId),\n          email: userEmail,\n          name: userName,\n          role: userRole\n        });\n      } catch (storageError) {\n        console.error('Error accediendo a localStorage:', storageError);\n        setError('Error de sesión. Recarga la página e inicia sesión nuevamente.');\n      }\n    };\n    checkUserAuth();\n  }, []);\n  useEffect(() => {\n    let mapInstance = null;\n    let timeoutId = null;\n    const initializeMap = () => {\n      // Limpiar mapa existente si existe\n      if (mapInstance) {\n        mapInstance.remove();\n        mapInstance = null;\n      }\n\n      // Verificar que el contenedor existe\n      if (!mapRef.current) {\n        console.log('Contenedor del mapa no encontrado');\n        return;\n      }\n\n      // Limpiar completamente el contenedor\n      mapRef.current.innerHTML = '';\n\n      // Función para crear el mapa\n      const createMap = () => {\n        try {\n          // Verificar que Leaflet está disponible\n          if (!window.L) {\n            console.log('Leaflet no está disponible aún');\n            return;\n          }\n\n          // Crear mapa centrado en Perú\n          mapInstance = window.L.map(mapRef.current, {\n            center: [-9.189967, -75.015152],\n            zoom: 6,\n            zoomControl: true,\n            attributionControl: true\n          });\n\n          // Agregar capa de OpenStreetMap\n          window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n            attribution: '© OpenStreetMap contributors',\n            maxZoom: 19\n          }).addTo(mapInstance);\n\n          // Actualizar estado\n          setMap(mapInstance);\n\n          // Limpiar marcador anterior si existe\n          if (marker && mapInstance.hasLayer && mapInstance.hasLayer(marker)) {\n            mapInstance.removeLayer(marker);\n            setMarker(null);\n          }\n\n          // Agregar evento de click\n          mapInstance.on('click', async e => {\n            const {\n              lat,\n              lng\n            } = e.latlng;\n\n            // Remover marcador anterior\n            if (marker && mapInstance.hasLayer(marker)) {\n              mapInstance.removeLayer(marker);\n            }\n\n            // Crear nuevo marcador\n            const newMarker = window.L.marker([lat, lng]).addTo(mapInstance);\n            setMarker(newMarker);\n\n            // Obtener dirección\n            try {\n              const response = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&addressdetails=1`);\n              const data = await response.json();\n              if (data && data.display_name) {\n                setLocation(prev => ({\n                  ...prev,\n                  address: data.display_name,\n                  coordinates: {\n                    lat,\n                    lng\n                  }\n                }));\n              }\n            } catch (error) {\n              console.error('Error al obtener dirección:', error);\n              setLocation(prev => ({\n                ...prev,\n                address: `Coordenadas: ${lat.toFixed(6)}, ${lng.toFixed(6)}`,\n                coordinates: {\n                  lat,\n                  lng\n                }\n              }));\n            }\n          });\n          console.log('Mapa inicializado correctamente');\n        } catch (error) {\n          console.error('Error al crear mapa:', error);\n        }\n      };\n\n      // Cargar recursos de Leaflet si no están disponibles\n      const loadLeafletResources = () => {\n        // Cargar CSS si no existe\n        if (!document.querySelector('link[href*=\"leaflet\"]')) {\n          const link = document.createElement('link');\n          link.rel = 'stylesheet';\n          link.href = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.css';\n          link.onload = () => console.log('CSS de Leaflet cargado');\n          document.head.appendChild(link);\n        }\n\n        // Cargar JavaScript si no existe\n        if (!window.L) {\n          const script = document.createElement('script');\n          script.src = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.js';\n          script.onload = () => {\n            console.log('JavaScript de Leaflet cargado');\n            // Pequeño delay para asegurar que todo esté listo\n            timeoutId = setTimeout(createMap, 100);\n          };\n          script.onerror = () => {\n            console.error('Error al cargar Leaflet');\n          };\n          document.head.appendChild(script);\n        } else {\n          // Leaflet ya está disponible\n          createMap();\n        }\n      };\n\n      // Iniciar carga de recursos\n      loadLeafletResources();\n    };\n\n    // Delay para asegurar que el DOM esté listo\n    timeoutId = setTimeout(initializeMap, 50);\n\n    // Cleanup function\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      if (mapInstance) {\n        try {\n          mapInstance.remove();\n        } catch (error) {\n          console.error('Error al limpiar mapa:', error);\n        }\n      }\n    };\n  }, [currentStep]); // Dependencia en currentStep para reinicializar cuando sea necesario\n\n  // También agrega este useEffect adicional para manejar cambios de paso\n  useEffect(() => {\n    // Reinicializar mapa cuando volvemos al paso 1\n    if (currentStep === 1 && !map && mapRef.current) {\n      // Forzar reinicialización después de un pequeño delay\n      const reinitTimeout = setTimeout(() => {\n        if (mapRef.current && !map) {\n          // Trigger de reinicialización\n          setMap(null);\n        }\n      }, 100);\n      return () => clearTimeout(reinitTimeout);\n    }\n  }, [currentStep, map]);\n\n  // Reemplaza la función getCurrentLocation con esta versión mejorada:\n\n  const getCurrentLocation = () => {\n    setLoading(true);\n    setError(''); // Limpiar errores anteriores\n\n    if (!navigator.geolocation) {\n      setError('La geolocalización no está soportada en este navegador');\n      setLoading(false);\n      return;\n    }\n    navigator.geolocation.getCurrentPosition(async position => {\n      try {\n        const lat = position.coords.latitude;\n        const lng = position.coords.longitude;\n\n        // Verificar que el mapa existe y está listo\n        if (!map || !window.L) {\n          setError('El mapa no está disponible. Intenta recargar la página.');\n          setLoading(false);\n          return;\n        }\n\n        // Verificar que el mapa tiene el método setView\n        if (typeof map.setView !== 'function') {\n          setError('Error en la inicialización del mapa. Intenta recargar la página.');\n          setLoading(false);\n          return;\n        }\n\n        // Actualizar vista del mapa\n        map.setView([lat, lng], 15);\n\n        // Remover marcador anterior si existe\n        if (marker && map.hasLayer && map.hasLayer(marker)) {\n          map.removeLayer(marker);\n        }\n\n        // Crear nuevo marcador\n        const newMarker = window.L.marker([lat, lng]).addTo(map);\n        setMarker(newMarker);\n\n        // Obtener dirección con manejo de errores mejorado\n        try {\n          const response = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&addressdetails=1`, {\n            timeout: 10000\n          } // 10 segundos timeout\n          );\n          if (!response.ok) {\n            throw new Error(`HTTP ${response.status}`);\n          }\n          const data = await response.json();\n          if (data && data.display_name) {\n            setLocation(prev => ({\n              ...prev,\n              address: data.display_name,\n              coordinates: {\n                lat,\n                lng\n              }\n            }));\n          } else {\n            // Fallback si no se puede obtener la dirección\n            setLocation(prev => ({\n              ...prev,\n              address: `Coordenadas: ${lat.toFixed(6)}, ${lng.toFixed(6)}`,\n              coordinates: {\n                lat,\n                lng\n              }\n            }));\n          }\n        } catch (error) {\n          console.warn('Error al obtener dirección, usando coordenadas:', error);\n          setLocation(prev => ({\n            ...prev,\n            address: `Coordenadas: ${lat.toFixed(6)}, ${lng.toFixed(6)}`,\n            coordinates: {\n              lat,\n              lng\n            }\n          }));\n        }\n      } catch (error) {\n        console.error('Error al procesar ubicación:', error);\n        setError('Error al procesar la ubicación obtenida');\n      } finally {\n        setLoading(false);\n      }\n    }, error => {\n      let errorMessage = 'No se pudo obtener la ubicación actual';\n      switch (error.code) {\n        case error.PERMISSION_DENIED:\n          errorMessage = 'Permiso de ubicación denegado. Por favor, permite el acceso a tu ubicación.';\n          break;\n        case error.POSITION_UNAVAILABLE:\n          errorMessage = 'Información de ubicación no disponible.';\n          break;\n        case error.TIMEOUT:\n          errorMessage = 'Tiempo de espera agotado al obtener ubicación.';\n          break;\n        default:\n          errorMessage = 'Error desconocido al obtener ubicación.';\n          break;\n      }\n      setError(errorMessage);\n      setLoading(false);\n    }, {\n      enableHighAccuracy: true,\n      timeout: 15000,\n      // 15 segundos\n      maximumAge: 60000 // Cache por 1 minuto\n    });\n  };\n\n  // Cargar medicamentos y drones desde la API\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Cargar medicamentos\n        const medicationsResponse = await fetch('http://localhost:8081/api/medicamentos');\n        const medicationsData = await medicationsResponse.json();\n        setMedications(medicationsData);\n\n        // Cargar drones disponibles\n        const dronesResponse = await fetch('http://localhost:8081/api/drones');\n        const dronesData = await dronesResponse.json();\n        setAvailableDrones(dronesData);\n      } catch (err) {\n        console.error('Error al cargar datos:', err);\n        setError('Error al cargar datos desde el servidor');\n      }\n    };\n    fetchData();\n  }, []);\n\n  // FUNCIÓN CORREGIDA - Reemplaza la función assignDroneByPriority existente\n  useEffect(() => {\n    console.log('=== DEBUG MEDICAMENTOS CARGADOS ===');\n    console.log('medications array:', medications);\n    console.log('medications length:', medications.length);\n    if (medications.length > 0) {\n      console.log('Estructura del primer medicamento:', JSON.stringify(medications[0], null, 2));\n      console.log('Campos disponibles:', Object.keys(medications[0]));\n    }\n  }, [medications]);\n  const assignDroneByPriority = priority => {\n    console.log('=== INICIO DEBUG ASIGNACIÓN DRON ===');\n    console.log('Prioridad recibida:', priority);\n    console.log('availableDrones:', availableDrones);\n\n    // Verificar si availableDrones está vacío o no es array\n    if (!availableDrones || !Array.isArray(availableDrones) || availableDrones.length === 0) {\n      console.error('❌ availableDrones está vacío o no es array válido');\n      return null;\n    }\n\n    // Mostrar información detallada de cada dron\n    console.log('--- ANÁLISIS DE DRONES DISPONIBLES ---');\n    availableDrones.forEach((drone, index) => {\n      console.log(`Dron ${index + 1}:`, {\n        id: drone.id,\n        identificador: drone.identificador,\n        modelo: drone.modelo,\n        capacidad_kg: drone.capacidadKg,\n        // ⚠️ CORREGIDO: camelCase\n        nivel_bateria: drone.nivelBateria,\n        // ⚠️ CORREGIDO: camelCase\n        // Verificar tipos de datos\n        tipo_bateria: typeof drone.nivelBateria,\n        valor_bateria_crudo: drone.nivelBateria\n      });\n    });\n\n    // FILTRO CORREGIDO - Usar nombres correctos de campos\n    const activeDrones = availableDrones.filter(drone => {\n      // Usar el nombre correcto del campo: nivelBateria (no nivel_bateria)\n      let bateria = 0;\n      if (typeof drone.nivelBateria === 'string') {\n        // Si es string, remover caracteres no numéricos como '%' \n        bateria = parseInt(drone.nivelBateria.replace(/[^0-9]/g, '')) || 0;\n      } else if (typeof drone.nivelBateria === 'number') {\n        bateria = drone.nivelBateria;\n      }\n\n      // Filtro realista ahora que tenemos los datos correctos\n      const bateriaMinima = 50; // Nivel mínimo real\n      const esValido = bateria >= bateriaMinima;\n      console.log(`Dron ${drone.identificador || drone.id}: \n      - Batería cruda: \"${drone.nivelBateria}\" (${typeof drone.nivelBateria})\n      - Batería procesada: ${bateria}%\n      - Mínima requerida: ${bateriaMinima}%\n      - Resultado: ${esValido ? 'VÁLIDO ✅' : 'RECHAZADO ❌'}`);\n      return esValido;\n    });\n    console.log(`Drones válidos encontrados: ${activeDrones.length}/${availableDrones.length}`);\n    if (activeDrones.length === 0) {\n      console.error('❌ NINGÚN DRON PASÓ EL FILTRO');\n      console.log('Intentando con filtro aún más permisivo...');\n\n      // FILTRO DE EMERGENCIA - Aceptar cualquier dron\n      const emergencyDrones = availableDrones.filter(drone => {\n        const tieneId = drone.id && drone.identificador;\n        console.log(`Dron ${drone.identificador || 'sin_id'}: tiene datos básicos = ${tieneId}`);\n        return tieneId;\n      });\n      if (emergencyDrones.length > 0) {\n        console.log('✅ Usando filtro de emergencia, drones encontrados:', emergencyDrones.length);\n        return emergencyDrones[0]; // Retornar el primer dron disponible\n      }\n      console.error('❌ Incluso el filtro de emergencia falló');\n      return null;\n    }\n\n    // LÓGICA DE SELECCIÓN CORREGIDA - Usar nombres correctos\n    let selectedDrone;\n    if (priority === 'alta') {\n      // Para prioridad alta: mayor capacidad y mejor batería\n      selectedDrone = activeDrones.reduce((best, current) => {\n        const bestCapacity = parseFloat(best.capacidadKg) || 0; // ⚠️ CORREGIDO\n        const currentCapacity = parseFloat(current.capacidadKg) || 0; // ⚠️ CORREGIDO\n        const bestBattery = parseInt(best.nivelBateria) || 0; // ⚠️ CORREGIDO\n        const currentBattery = parseInt(current.nivelBateria) || 0; // ⚠️ CORREGIDO\n\n        // Priorizar capacidad, luego batería\n        if (currentCapacity > bestCapacity) return current;\n        if (currentCapacity === bestCapacity && currentBattery > bestBattery) return current;\n        return best;\n      });\n    } else if (priority === 'media') {\n      // Para prioridad media: balance entre capacidad y batería\n      selectedDrone = activeDrones.reduce((best, current) => {\n        const bestScore = (parseFloat(best.capacidadKg) || 0) + (parseInt(best.nivelBateria) || 0); // ⚠️ CORREGIDO\n        const currentScore = (parseFloat(current.capacidadKg) || 0) + (parseInt(current.nivelBateria) || 0); // ⚠️ CORREGIDO\n        return currentScore > bestScore ? current : best;\n      });\n    } else {\n      // Para prioridad baja: cualquier dron disponible (el primero)\n      selectedDrone = activeDrones[0];\n    }\n    console.log('✅ DRON SELECCIONADO:', {\n      id: selectedDrone.id,\n      identificador: selectedDrone.identificador,\n      modelo: selectedDrone.modelo,\n      capacidad_kg: selectedDrone.capacidadKg,\n      // ⚠️ CORREGIDO\n      nivel_bateria: selectedDrone.nivelBateria,\n      // ⚠️ CORREGIDO\n      prioridad_usada: priority\n    });\n    console.log('=== FIN DEBUG ASIGNACIÓN DRON ===');\n    return selectedDrone;\n  };\n  // Manejar selección de medicamentos\n  // Reemplaza la función handleMedicationSelect con esta versión mejorada:\n\n  // Reemplaza la función handleMedicationSelect con esta versión mejorada:\n\n  const handleMedicationSelect = pain => {\n    console.log('=== SELECCIONANDO MEDICAMENTO ===');\n    console.log('Dolor seleccionado:', pain);\n    const existing = selectedMedications.find(item => item.pain === pain);\n    if (existing) {\n      console.log('Medicamento ya existe para este dolor');\n      return;\n    }\n\n    // Buscar medicamento en la base de datos\n    const medicationForPain = medications.find(med => {\n      // Verificar diferentes formas de coincidencia\n      if (med.nombre_comercial && med.nombre_comercial.toLowerCase().includes(pain.toLowerCase())) {\n        return true;\n      }\n      if (med.dolores && med.dolores.toLowerCase() === pain.toLowerCase()) {\n        return true;\n      }\n      if (med.indicaciones && med.indicaciones.toLowerCase().includes(pain.toLowerCase())) {\n        return true;\n      }\n      return false;\n    });\n    console.log('Medicamento encontrado:', medicationForPain);\n    if (medicationForPain) {\n      // Verificar que el medicamento tiene ID válido\n      if (!medicationForPain.id) {\n        console.error('❌ ERROR: El medicamento no tiene ID válido');\n        alert(`Error: El medicamento para ${pain} no tiene ID válido en la base de datos`);\n        return;\n      }\n      const newMedicationItem = {\n        pain,\n        medication: {\n          id: medicationForPain.id,\n          // ID real de la base de datos\n          nombre_comercial: medicationForPain.nombre_comercial,\n          forma_administracion: medicationForPain.forma_administracion,\n          dolencia: pain,\n          peso: medicationForPain.peso || 0.02\n        },\n        quantity: 1\n      };\n      setSelectedMedications(prev => [...prev, newMedicationItem]);\n      console.log('✅ Medicamento agregado exitosamente');\n    } else {\n      // Si no se encuentra, mostrar mensaje y no agregar medicamento genérico\n      alert(`No se encontró un medicamento específico para \"${pain}\" en nuestra base de datos. Por favor, contacta con el administrador.`);\n      console.log('❌ No se encontró medicamento para:', pain);\n    }\n  };\n  // Actualizar cantidad de medicamento\n  const updateMedicationQuantity = (pain, quantity) => {\n    const newQuantity = parseInt(quantity);\n    if (newQuantity > 0) {\n      setSelectedMedications(prev => prev.map(item => item.pain === pain ? {\n        ...item,\n        quantity: newQuantity\n      } : item));\n    }\n  };\n\n  // Remover medicamento\n  const removeMedication = pain => {\n    setSelectedMedications(prev => prev.filter(item => item.pain !== pain));\n  };\n\n  // REEMPLAZA la función handleSubmit completa con esta versión corregida:\n\n  // FUNCIÓN HANDLESUBMIT COMPLETAMENTE CORREGIDA - VERSIÓN FINAL\n  const handleSubmit = async () => {\n    console.log('=== INICIO HANDLE SUBMIT ===');\n    if (!userInfo) {\n      console.error('❌ Usuario no autenticado');\n      setError('Usuario no autenticado');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      var _regions$find;\n      // 1. VERIFICAR DATOS PREVIOS\n      console.log('--- Verificando datos antes de procesar ---');\n      console.log('selectedMedications:', JSON.stringify(selectedMedications, null, 2));\n      console.log('priority:', priority);\n      console.log('location:', JSON.stringify(location, null, 2));\n      console.log('userInfo:', JSON.stringify(userInfo, null, 2));\n      if (!availableDrones || availableDrones.length === 0) {\n        throw new Error('No se han cargado los drones disponibles. Recarga la página e intenta de nuevo.');\n      }\n\n      // 2. ASIGNAR DRON\n      console.log('--- Llamando a assignDroneByPriority ---');\n      const assignedDrone = assignDroneByPriority(priority);\n      if (!assignedDrone) {\n        throw new Error(`No hay drones disponibles en este momento con la prioridad ${priority}.`);\n      }\n      console.log('✅ Dron asignado exitosamente:', JSON.stringify(assignedDrone, null, 2));\n\n      // 3. VALIDAR IDs - CRÍTICO: CONVERTIR A NÚMEROS\n      const userId = parseInt(userInfo.id);\n      const droneId = parseInt(assignedDrone.id);\n      console.log('=== VALIDACIÓN DE IDs ===');\n      console.log('userInfo.id (original):', userInfo.id, typeof userInfo.id);\n      console.log('userId (parseado):', userId, typeof userId);\n      console.log('assignedDrone.id (original):', assignedDrone.id, typeof assignedDrone.id);\n      console.log('droneId (parseado):', droneId, typeof droneId);\n      if (isNaN(userId) || isNaN(droneId) || userId <= 0 || droneId <= 0) {\n        throw new Error(`IDs inválidos - Usuario: ${userId}, Dron: ${droneId}`);\n      }\n\n      // 4. CREAR SOLICITUD - ESTRUCTURA CORREGIDA PARA JPA\n      const solicitudData = {\n        // ✅ ENVIAR OBJETO USUARIO COMPLETO PARA JPA\n        usuario: {\n          id: userId\n        },\n        prioridad: priority.toLowerCase(),\n        // ✅ Enum en formato Java\n        destino: location.address,\n        // ✅ texto libre\n        region: location.region.toLowerCase(),\n        // ✅ Enum en formato Java\n        estadoSolicitud: 'pendiente',\n        // ✅ Enum en formato Java\n        dronAsignado: {\n          id: droneId\n        }\n        // ❌ No enviar fechaSolicitud → el backend la establece\n      };\n      console.log('--- SOLICITUD: Enviando datos JPA FORMAT ---');\n      console.log('Datos a enviar:', JSON.stringify(solicitudData, null, 2));\n      const solicitudResponse = await fetch('http://localhost:8081/api/solicitudes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(solicitudData)\n      });\n      console.log('Status solicitud response:', solicitudResponse.status);\n      if (!solicitudResponse.ok) {\n        const errorText = await solicitudResponse.text();\n        console.error('❌ Error en solicitud:', errorText);\n        console.error('Datos enviados:', JSON.stringify(solicitudData, null, 2));\n        throw new Error(`Error al crear solicitud: ${solicitudResponse.status} - ${errorText}`);\n      }\n      const solicitudCreada = await solicitudResponse.json();\n      console.log('✅ Solicitud creada exitosamente:', JSON.stringify(solicitudCreada, null, 2));\n      const solicitudId = parseInt(solicitudCreada.id);\n      if (isNaN(solicitudId)) {\n        throw new Error('ID de solicitud inválido recibido del servidor');\n      }\n\n      // 5. GUARDAR MEDICAMENTOS - ESTRUCTURA JPA CORREGIDA\n      console.log('--- MEDICAMENTOS: Procesando lista ---');\n      for (let i = 0; i < selectedMedications.length; i++) {\n        const item = selectedMedications[i];\n        console.log(`\\n=== MEDICAMENTO ${i + 1} DEBUG ===`);\n        console.log('item completo:', JSON.stringify(item, null, 2));\n\n        // VALIDACIONES CRÍTICAS\n        if (!item.medication || !item.medication.id) {\n          console.error('❌ ERROR: Medicamento sin ID válido');\n          throw new Error(`Medicamento ${i + 1} no tiene ID válido`);\n        }\n\n        // Verificar que el medicamento existe en la base de datos\n        const medicamentoExiste = medications.find(med => med.id === item.medication.id);\n        if (!medicamentoExiste) {\n          console.error('❌ ERROR: Medicamento no existe en la base de datos');\n          throw new Error(`El medicamento con ID ${item.medication.id} no existe en la base de datos`);\n        }\n\n        // ✅ ESTRUCTURA CORRECTA PARA JPA - Objetos completos\n        const medicamentoData = {\n          solicitud: {\n            id: solicitudId // JPA espera un objeto con ID\n          },\n          medicamento: {\n            id: parseInt(item.medication.id) // JPA espera un objeto con ID\n          },\n          cantidad: parseInt(item.quantity)\n        };\n        console.log('Datos medicamento (JPA format):', JSON.stringify(medicamentoData, null, 2));\n\n        // Validar que los IDs son números válidos\n        if (isNaN(medicamentoData.solicitud.id) || isNaN(medicamentoData.medicamento.id)) {\n          throw new Error(`IDs inválidos - Solicitud: ${medicamentoData.solicitud.id}, Medicamento: ${medicamentoData.medicamento.id}`);\n        }\n        console.log(`Enviando medicamento ${i + 1} al servidor...`);\n        try {\n          const medicamentoResponse = await fetch('http://localhost:8081/api/solicitud-medicamentos', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            },\n            body: JSON.stringify(medicamentoData)\n          });\n          console.log(`Status medicamento response: ${medicamentoResponse.status}`);\n          if (!medicamentoResponse.ok) {\n            const errorText = await medicamentoResponse.text();\n            console.error(`❌ Error en medicamento ${i + 1}:`, errorText);\n            console.error('Datos enviados:', JSON.stringify(medicamentoData, null, 2));\n\n            // Intentar parsear el error para obtener más información\n            try {\n              const errorJson = JSON.parse(errorText);\n              throw new Error(`Error del servidor: ${errorJson.message || errorJson.error || 'Error desconocido'}`);\n            } catch {\n              throw new Error(`Error al guardar medicamento: ${errorText}`);\n            }\n          }\n          const medicamentoGuardado = await medicamentoResponse.json();\n          console.log(`✅ Medicamento ${i + 1} guardado exitosamente:`, medicamentoGuardado);\n        } catch (fetchError) {\n          console.error(`❌ Error de conexión en medicamento ${i + 1}:`, fetchError);\n          throw new Error(`Error de conexión al guardar medicamento: ${fetchError.message}`);\n        }\n      }\n\n      // 6. CREAR VUELO - ESTRUCTURA COMPLETAMENTE CORREGIDA PARA TU MODELO\n      console.log('--- VUELO: Preparando datos ---');\n      const vueloData = {\n        // ✅ REFERENCIAS JPA CORRECTAS\n        solicitud: {\n          id: solicitudId\n        },\n        dron: {\n          id: droneId\n        },\n        // ✅ FECHA EN FORMATO ISO QUE JPA PUEDE MANEJAR\n        fechaInicio: new Date().toISOString()\n      };\n      console.log('--- VUELO: Enviando datos JPA FORMAT ---');\n      console.log('Datos vuelo:', JSON.stringify(vueloData, null, 2));\n      const vueloResponse = await fetch('http://localhost:8081/api/vuelos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(vueloData)\n      });\n      console.log('Status vuelo response:', vueloResponse.status);\n      if (!vueloResponse.ok) {\n        const errorText = await vueloResponse.text();\n        console.error('❌ Error en vuelo:', errorText);\n        console.error('Datos vuelo enviados:', JSON.stringify(vueloData, null, 2));\n\n        // Log adicional para debugging de vuelos\n        console.error('IDs utilizados:', {\n          solicitudId,\n          droneId\n        });\n        try {\n          const errorJson = JSON.parse(errorText);\n          throw new Error(`Error del servidor al crear vuelo: ${errorJson.message || errorJson.error || 'Error desconocido'}`);\n        } catch {\n          throw new Error(`Error al crear vuelo: ${vueloResponse.status} - ${errorText}`);\n        }\n      }\n      const vueloCreado = await vueloResponse.json();\n      console.log('✅ Vuelo creado exitosamente:', JSON.stringify(vueloCreado, null, 2));\n\n      // 7. ACTUALIZAR ESTADO DE LA SOLICITUD A 'ASIGNADA'\n      console.log('--- ACTUALIZANDO ESTADO SOLICITUD ---');\n      const updateSolicitudData = {\n        estadoSolicitud: 'asignada' // ✅ camelCase para JPA\n      };\n      const updateResponse = await fetch(`http://localhost:8081/api/solicitudes/${solicitudId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(updateSolicitudData)\n      });\n      if (updateResponse.ok) {\n        console.log('✅ Estado de solicitud actualizado a \"asignada\"');\n      } else {\n        console.warn('⚠️ No se pudo actualizar el estado de la solicitud, pero continuando...');\n      }\n\n      // 8. MOSTRAR ÉXITO CON DETALLES COMPLETOS\n      const totalMedicamentos = selectedMedications.reduce((total, item) => total + item.quantity, 0);\n      alert(`\n🎉 ¡SOLICITUD ENVIADA EXITOSAMENTE!\n\n📋 DETALLES DE LA SOLICITUD:\n   • ID Solicitud: ${solicitudCreada.id}\n   • Estado: Asignada y procesándose\n\n👤 USUARIO:\n   • ${userInfo.name}\n   • ID Usuario: ${userId} ✅\n\n🚁 DRON ASIGNADO:\n   • ${assignedDrone.identificador}\n   • ID Dron: ${droneId} ✅\n   • Modelo: ${assignedDrone.modelo}\n   • Batería: ${assignedDrone.nivelBateria}%\n   • Capacidad: ${assignedDrone.capacidadKg} kg\n\n📍 DESTINO:\n   • Región: ${(_regions$find = regions.find(r => r.value === location.region)) === null || _regions$find === void 0 ? void 0 : _regions$find.label}\n   • Dirección: ${location.address}\n\n💊 MEDICAMENTOS:\n   • ${selectedMedications.length} tipos diferentes\n   • ${totalMedicamentos} unidades totales\n   • Todos guardados correctamente ✅\n\n⚡ PRIORIDAD: ${priority.toUpperCase()}\n\n🛫 VUELO:\n   • ID Vuelo: ${vueloCreado.id} ✅\n   • Solicitud ID: ${solicitudId} ✅\n   • Dron ID: ${droneId} ✅\n   • Fecha inicio: ${new Date().toLocaleString()} ✅\n   • Estado: Programado\n\nEl dron se dirigirá a tu ubicación pronto. ¡Gracias por usar nuestro servicio!\n    `);\n\n      // 9. RESETEAR FORMULARIO\n      setCurrentStep(1);\n      setLocation({\n        region: '',\n        address: '',\n        coordinates: null,\n        confirmed: false\n      });\n      setSelectedMedications([]);\n      setPriority('');\n    } catch (err) {\n      console.error('❌ Error completo en handleSubmit:', err);\n      setError(`Error al procesar la solicitud: ${err.message}`);\n\n      // Log adicional para debugging\n      console.error('Stack completo:', err.stack);\n      console.error('Estado actual:', {\n        userInfo,\n        selectedMedications: selectedMedications.length,\n        priority,\n        location: location.address ? 'configurada' : 'no configurada',\n        availableDrones: availableDrones.length\n      });\n    } finally {\n      setLoading(false);\n      console.log('=== FIN HANDLE SUBMIT ===');\n    }\n  };\n  const nextStep = () => {\n    if (currentStep < 4) {\n      setCurrentStep(currentStep + 1);\n    }\n  };\n  const prevStep = () => {\n    if (currentStep > 1) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n  const canProceedStep1 = location.region && location.address && location.confirmed;\n  const canProceedStep2 = selectedMedications.length > 0;\n  const canProceedStep3 = priority;\n\n  // Mostrar error si no está autenticado\n  if (!userInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"medical-form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: \"\\u26A0\\uFE0F Usuario no autenticado. Por favor, inicia sesi\\xF3n para continuar.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 914,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"medical-form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"Solicitud de Medicamentos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 927,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          style: {\n            marginBottom: '10px',\n            padding: '10px',\n            backgroundColor: '#f0f8ff',\n            borderRadius: '5px'\n          },\n          children: [\"\\uD83D\\uDC64 Bienvenido, \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: userInfo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 929,\n            columnNumber: 28\n          }, this), \" | \\uD83D\\uDCE7 \", userInfo.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 928,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: [1, 2, 3, 4].map(step => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `progress-step ${step <= currentStep ? 'active' : ''}`,\n            children: step\n          }, step, false, {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 931,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 926,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 944,\n        columnNumber: 11\n      }, this), currentStep === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"step-title\",\n          children: \"Selecciona tu Ubicaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 954,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"region-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Regi\\xF3n:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 957,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: location.region,\n            onChange: e => setLocation(prev => ({\n              ...prev,\n              region: e.target.value\n            })),\n            className: \"select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecciona una regi\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 963,\n              columnNumber: 17\n            }, this), regions.map(region => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: region.value,\n              children: region.label\n            }, region.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 965,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 958,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: getCurrentLocation,\n              disabled: loading,\n              className: \"location-button\",\n              children: loading ? 'Obteniendo ubicación...' : 'Usar mi ubicación actual'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 974,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"map-instructions\",\n              children: \"\\uD83D\\uDCCD Haz clic en el mapa para seleccionar tu ubicaci\\xF3n de entrega\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 982,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 973,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: mapRef,\n            className: \"map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 987,\n            columnNumber: 15\n          }, this), location.address && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"address-confirmation\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"address-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Direcci\\xF3n seleccionada:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 992,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 992,\n                columnNumber: 61\n              }, this), location.address]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 991,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"confirmation-buttons\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => setLocation(prev => ({\n                  ...prev,\n                  confirmed: true\n                })),\n                className: `button ${location.confirmed ? 'confirmed-button' : 'confirm-button'}`,\n                children: location.confirmed ? '✓ Confirmado' : 'Confirmar ubicación'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 996,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 995,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 990,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 972,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navigation-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: nextStep,\n            disabled: !canProceedStep1,\n            className: `button next-button ${!canProceedStep1 ? 'disabled-button' : ''}`,\n            children: \"Siguiente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1009,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1008,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 11\n      }, this), currentStep === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"step-title\",\n          children: \"Selecciona tus Medicamentos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1023,\n          columnNumber: 13\n        }, this), medications.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"debug-info\",\n          style: {\n            padding: '10px',\n            backgroundColor: '#fff3cd',\n            marginBottom: '10px',\n            borderRadius: '5px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u26A0\\uFE0F Cargando medicamentos desde la base de datos...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1027,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1026,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pain-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"\\xBFQu\\xE9 dolencias tienes?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1032,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pain-grid\",\n            children: availablePains.map(pain => /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleMedicationSelect(pain),\n              disabled: selectedMedications.some(item => item.pain === pain),\n              className: `pain-button ${selectedMedications.some(item => item.pain === pain) ? 'selected' : ''}`,\n              children: [pain, selectedMedications.some(item => item.pain === pain) && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginLeft: '5px'\n                },\n                children: \"\\u2713\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1044,\n                columnNumber: 23\n              }, this)]\n            }, pain, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1035,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1033,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1031,\n          columnNumber: 13\n        }, this), selectedMedications.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-medications\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"subtitle\",\n            children: \"Medicamentos Seleccionados:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1053,\n            columnNumber: 17\n          }, this), selectedMedications.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"medication-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"medication-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: item.medication.nombre_comercial || item.medication.nombreComercial\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1057,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"medication-pain\",\n                children: [\"Para: \", item.pain]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1058,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"medication-form\",\n                children: [\"Forma: \", item.medication.forma_administracion || item.medication.formaAdministracion]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1059,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1056,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quantity-controls\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"quantity-label\",\n                children: \"Cantidad:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1064,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"1\",\n                max: \"10\",\n                value: item.quantity,\n                onChange: e => updateMedicationQuantity(item.pain, e.target.value),\n                className: \"quantity-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1065,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => removeMedication(item.pain),\n                className: \"remove-button\",\n                children: \"\\u2715\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1073,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1063,\n              columnNumber: 21\n            }, this)]\n          }, item.pain, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1055,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1052,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navigation-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: prevStep,\n            className: \"button prev-button\",\n            children: \"Anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1087,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: nextStep,\n            disabled: !canProceedStep2,\n            className: `button next-button ${!canProceedStep2 ? 'disabled-button' : ''}`,\n            children: [\"Siguiente (\", selectedMedications.length, \" medicamento\", selectedMedications.length !== 1 ? 's' : '', \" seleccionado\", selectedMedications.length !== 1 ? 's' : '', \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1094,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1086,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1022,\n        columnNumber: 11\n      }, this), currentStep === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"step-title\",\n          children: \"Selecciona la Prioridad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"priority-selector\",\n          children: [{\n            value: 'alta',\n            label: 'Alta',\n            description: 'Urgente - Asignación de dron premium con mayor capacidad',\n            color: '#ff4757',\n            details: '🚁 Dron de alta capacidad • ⚡ Batería 70%+ • 🎯 Entrega inmediata'\n          }, {\n            value: 'media',\n            label: 'Media',\n            description: 'Moderada - Asignación de dron estándar',\n            color: '#ffa502',\n            details: '🚁 Dron estándar • ⚡ Batería 60%+ • 🕐 Entrega en pocas horas'\n          }, {\n            value: 'baja',\n            label: 'Baja',\n            description: 'No urgente - Cualquier dron disponible',\n            color: '#2ed573',\n            details: '🚁 Cualquier dron • ⚡ Batería 50%+ • 📅 Entrega dentro del día'\n          }].map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setPriority(option.value),\n            className: `priority-option ${priority === option.value ? 'selected' : ''}`,\n            style: {\n              borderLeft: `4px solid ${option.color}`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"priority-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"priority-label\",\n                children: option.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1142,\n                columnNumber: 21\n              }, this), priority === option.value && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"checkmark\",\n                children: \"\\u2713\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1143,\n                columnNumber: 51\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1141,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"priority-description\",\n              children: option.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1145,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              style: {\n                color: '#666',\n                fontSize: '12px'\n              },\n              children: option.details\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1146,\n              columnNumber: 19\n            }, this)]\n          }, option.value, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1135,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navigation-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: prevStep,\n            className: \"button prev-button\",\n            children: \"Anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: nextStep,\n            disabled: !canProceedStep3,\n            className: `button next-button ${!canProceedStep3 ? 'disabled-button' : ''}`,\n            children: \"Siguiente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1159,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1108,\n        columnNumber: 11\n      }, this), currentStep === 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"step-title\",\n          children: \"Confirma tu Solicitud\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"summary-title\",\n              children: \"\\uD83D\\uDC64 Solicitante\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"summary-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Nombre:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1180,\n                columnNumber: 19\n              }, this), \" \", userInfo.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1180,\n                columnNumber: 59\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1181,\n                columnNumber: 19\n              }, this), \" \", userInfo.email, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1181,\n                columnNumber: 59\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"ID Usuario:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1182,\n                columnNumber: 19\n              }, this), \" \", userInfo.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1179,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"summary-title\",\n              children: \"\\uD83D\\uDCCD Ubicaci\\xF3n de Entrega\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"summary-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Regi\\xF3n:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1189,\n                columnNumber: 19\n              }, this), \" \", (_regions$find2 = regions.find(r => r.value === location.region)) === null || _regions$find2 === void 0 ? void 0 : _regions$find2.label, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1189,\n                columnNumber: 99\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Direcci\\xF3n:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1190,\n                columnNumber: 19\n              }, this), \" \", location.address]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1188,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"summary-title\",\n              children: \"\\uD83D\\uDC8A Medicamentos Solicitados\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1195,\n              columnNumber: 17\n            }, this), selectedMedications.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-medication\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: item.medication.nombre_comercial || item.medication.nombreComercial\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1198,\n                columnNumber: 21\n              }, this), \" - Cantidad: \", item.quantity, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1198,\n                columnNumber: 135\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"Para: \", item.pain, \" | Forma: \", item.medication.forma_administracion || item.medication.formaAdministracion]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1199,\n                columnNumber: 21\n              }, this)]\n            }, item.pain, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1197,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Total medicamentos:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1202,\n                columnNumber: 20\n              }, this), \" \", selectedMedications.reduce((total, item) => total + item.quantity, 0)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1202,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"summary-title\",\n              children: \"\\u26A1 Prioridad y Asignaci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"summary-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `priority-badge ${priority}`,\n                children: priority === 'alta' ? 'Alta' : priority === 'media' ? 'Media' : 'Baja'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1208,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1211,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"Se asignar\\xE1 autom\\xE1ticamente el mejor dron disponible seg\\xFAn tu prioridad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1212,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1207,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1205,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navigation-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: prevStep,\n            className: \"button prev-button\",\n            children: \"Anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleSubmit,\n            disabled: loading,\n            className: \"button submit-button\",\n            children: loading ? 'Enviando solicitud y asignando dron...' : 'Enviar Solicitud'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1225,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1173,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 925,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 924,\n    columnNumber: 5\n  }, this);\n};\n_s(MedicalRequestForm, \"WYgX3jhNYqvfV5+Ts3pzmiuQmWo=\");\n_c = MedicalRequestForm;\nexport default MedicalRequestForm;\nvar _c;\n$RefreshReg$(_c, \"MedicalRequestForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","L","jsxDEV","_jsxDEV","MedicalRequestForm","_s","_regions$find2","currentStep","setCurrentStep","location","setLocation","region","address","coordinates","confirmed","selectedMedications","setSelectedMedications","priority","setPriority","medications","setMedications","availableDrones","setAvailableDrones","loading","setLoading","error","setError","userInfo","setUserInfo","mapRef","map","setMap","marker","setMarker","regions","value","label","availablePains","checkUserAuth","userId","localStorage","getItem","userEmail","userName","userRole","id","parseInt","email","name","role","storageError","console","mapInstance","timeoutId","initializeMap","remove","current","log","innerHTML","createMap","window","center","zoom","zoomControl","attributionControl","tileLayer","attribution","maxZoom","addTo","hasLayer","removeLayer","on","e","lat","lng","latlng","newMarker","response","fetch","data","json","display_name","prev","toFixed","loadLeafletResources","document","querySelector","link","createElement","rel","href","onload","head","appendChild","script","src","setTimeout","onerror","clearTimeout","reinitTimeout","getCurrentLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","setView","timeout","ok","Error","status","warn","errorMessage","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","enableHighAccuracy","maximumAge","fetchData","medicationsResponse","medicationsData","dronesResponse","dronesData","err","length","JSON","stringify","Object","keys","assignDroneByPriority","Array","isArray","forEach","drone","index","identificador","modelo","capacidad_kg","capacidadKg","nivel_bateria","nivelBateria","tipo_bateria","valor_bateria_crudo","activeDrones","filter","bateria","replace","bateriaMinima","esValido","emergencyDrones","tieneId","selectedDrone","reduce","best","bestCapacity","parseFloat","currentCapacity","bestBattery","currentBattery","bestScore","currentScore","prioridad_usada","handleMedicationSelect","pain","existing","find","item","medicationForPain","med","nombre_comercial","toLowerCase","includes","dolores","indicaciones","alert","newMedicationItem","medication","forma_administracion","dolencia","peso","quantity","updateMedicationQuantity","newQuantity","removeMedication","handleSubmit","_regions$find","assignedDrone","droneId","isNaN","solicitudData","usuario","prioridad","destino","estadoSolicitud","dronAsignado","solicitudResponse","method","headers","body","errorText","text","solicitudCreada","solicitudId","i","medicamentoExiste","medicamentoData","solicitud","medicamento","cantidad","medicamentoResponse","errorJson","parse","message","medicamentoGuardado","fetchError","vueloData","dron","fechaInicio","Date","toISOString","vueloResponse","vueloCreado","updateSolicitudData","updateResponse","totalMedicamentos","total","r","toUpperCase","toLocaleString","stack","nextStep","prevStep","canProceedStep1","canProceedStep2","canProceedStep3","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","padding","backgroundColor","borderRadius","step","onChange","target","type","onClick","disabled","ref","some","marginLeft","nombreComercial","formaAdministracion","min","max","description","color","details","option","borderLeft","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/gv250/OneDrive/Escritorio/Productos/frontend/src/components/Solicitud.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport '../css/Solicitud.css'\r\n\r\nconst MedicalRequestForm = () => {\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  const [location, setLocation] = useState({\r\n    region: '',\r\n    address: '',\r\n    coordinates: null,\r\n    confirmed: false\r\n  });\r\n  const [selectedMedications, setSelectedMedications] = useState([]);\r\n  const [priority, setPriority] = useState('');\r\n  const [medications, setMedications] = useState([]);\r\n  const [availableDrones, setAvailableDrones] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const mapRef = useRef(null);\r\n  const [map, setMap] = useState(null);\r\n  const [marker, setMarker] = useState(null);\r\n\r\n  // Regiones disponibles\r\n  const regions = [\r\n    { value: 'amazonas', label: 'Amazonas' },\r\n    { value: 'cusco', label: 'Cusco' },\r\n    { value: 'puno', label: 'Puno' },\r\n    { value: 'arequipa', label: 'Arequipa' }\r\n ];\r\n\r\n  // Dolores/medicamentos disponibles\r\n  const availablePains = [\r\n    'Dolor de cabeza',\r\n    'Fiebre',\r\n    'Dolor estomacal',\r\n    'Resfrío común',\r\n    'Presión alta',\r\n    'Diabetes',\r\n    'Dolor muscular',\r\n    'Alergias',\r\n    'Infección urinaria',\r\n    'Dolor de garganta'\r\n  ];\r\n\r\n  \r\n  // Verificar autenticación del usuario al cargar el componente\r\n  useEffect(() => {\r\n    const checkUserAuth = () => {\r\n  try {\r\n    const userId = localStorage.getItem('userId');\r\n    const userEmail = localStorage.getItem('email');\r\n    const userName = localStorage.getItem('nombre');\r\n    const userRole = localStorage.getItem('rol');\r\n\r\n    if (!userId || !userEmail) {\r\n      setError('Usuario no autenticado. Por favor, inicia sesión.');\r\n      return;\r\n    }\r\n\r\n    setUserInfo({\r\n      id: parseInt(userId),\r\n      email: userEmail,\r\n      name: userName,\r\n      role: userRole\r\n    });\r\n  } catch (storageError) {\r\n    console.error('Error accediendo a localStorage:', storageError);\r\n    setError('Error de sesión. Recarga la página e inicia sesión nuevamente.');\r\n  }\r\n};\r\n\r\n    checkUserAuth();\r\n  }, []);\r\n\r\n\r\n useEffect(() => {\r\n  let mapInstance = null;\r\n  let timeoutId = null;\r\n\r\n  const initializeMap = () => {\r\n    // Limpiar mapa existente si existe\r\n    if (mapInstance) {\r\n      mapInstance.remove();\r\n      mapInstance = null;\r\n    }\r\n\r\n    // Verificar que el contenedor existe\r\n    if (!mapRef.current) {\r\n      console.log('Contenedor del mapa no encontrado');\r\n      return;\r\n    }\r\n\r\n    // Limpiar completamente el contenedor\r\n    mapRef.current.innerHTML = '';\r\n\r\n    // Función para crear el mapa\r\n    const createMap = () => {\r\n      try {\r\n        // Verificar que Leaflet está disponible\r\n        if (!window.L) {\r\n          console.log('Leaflet no está disponible aún');\r\n          return;\r\n        }\r\n\r\n        // Crear mapa centrado en Perú\r\n        mapInstance = window.L.map(mapRef.current, {\r\n          center: [-9.189967, -75.015152],\r\n          zoom: 6,\r\n          zoomControl: true,\r\n          attributionControl: true\r\n        });\r\n        \r\n        // Agregar capa de OpenStreetMap\r\n        window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n          attribution: '© OpenStreetMap contributors',\r\n          maxZoom: 19\r\n        }).addTo(mapInstance);\r\n\r\n        // Actualizar estado\r\n        setMap(mapInstance);\r\n\r\n        // Limpiar marcador anterior si existe\r\n        if (marker && mapInstance.hasLayer && mapInstance.hasLayer(marker)) {\r\n          mapInstance.removeLayer(marker);\r\n          setMarker(null);\r\n        }\r\n\r\n        // Agregar evento de click\r\n        mapInstance.on('click', async (e) => {\r\n          const { lat, lng } = e.latlng;\r\n          \r\n          // Remover marcador anterior\r\n          if (marker && mapInstance.hasLayer(marker)) {\r\n            mapInstance.removeLayer(marker);\r\n          }\r\n          \r\n          // Crear nuevo marcador\r\n          const newMarker = window.L.marker([lat, lng]).addTo(mapInstance);\r\n          setMarker(newMarker);\r\n          \r\n          // Obtener dirección\r\n          try {\r\n            const response = await fetch(\r\n              `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&addressdetails=1`\r\n            );\r\n            const data = await response.json();\r\n            \r\n            if (data && data.display_name) {\r\n              setLocation(prev => ({\r\n                ...prev,\r\n                address: data.display_name,\r\n                coordinates: { lat, lng }\r\n              }));\r\n            }\r\n          } catch (error) {\r\n            console.error('Error al obtener dirección:', error);\r\n            setLocation(prev => ({\r\n              ...prev,\r\n              address: `Coordenadas: ${lat.toFixed(6)}, ${lng.toFixed(6)}`,\r\n              coordinates: { lat, lng }\r\n            }));\r\n          }\r\n        });\r\n\r\n        console.log('Mapa inicializado correctamente');\r\n      } catch (error) {\r\n        console.error('Error al crear mapa:', error);\r\n      }\r\n    };\r\n\r\n    // Cargar recursos de Leaflet si no están disponibles\r\n    const loadLeafletResources = () => {\r\n      // Cargar CSS si no existe\r\n      if (!document.querySelector('link[href*=\"leaflet\"]')) {\r\n        const link = document.createElement('link');\r\n        link.rel = 'stylesheet';\r\n        link.href = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.css';\r\n        link.onload = () => console.log('CSS de Leaflet cargado');\r\n        document.head.appendChild(link);\r\n      }\r\n\r\n      // Cargar JavaScript si no existe\r\n      if (!window.L) {\r\n        const script = document.createElement('script');\r\n        script.src = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.js';\r\n        script.onload = () => {\r\n          console.log('JavaScript de Leaflet cargado');\r\n          // Pequeño delay para asegurar que todo esté listo\r\n          timeoutId = setTimeout(createMap, 100);\r\n        };\r\n        script.onerror = () => {\r\n          console.error('Error al cargar Leaflet');\r\n        };\r\n        document.head.appendChild(script);\r\n      } else {\r\n        // Leaflet ya está disponible\r\n        createMap();\r\n      }\r\n    };\r\n\r\n    // Iniciar carga de recursos\r\n    loadLeafletResources();\r\n  };\r\n\r\n  // Delay para asegurar que el DOM esté listo\r\n  timeoutId = setTimeout(initializeMap, 50);\r\n\r\n  // Cleanup function\r\n  return () => {\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n    }\r\n    if (mapInstance) {\r\n      try {\r\n        mapInstance.remove();\r\n      } catch (error) {\r\n        console.error('Error al limpiar mapa:', error);\r\n      }\r\n    }\r\n  };\r\n}, [currentStep]); // Dependencia en currentStep para reinicializar cuando sea necesario\r\n\r\n// También agrega este useEffect adicional para manejar cambios de paso\r\nuseEffect(() => {\r\n  // Reinicializar mapa cuando volvemos al paso 1\r\n  if (currentStep === 1 && !map && mapRef.current) {\r\n    // Forzar reinicialización después de un pequeño delay\r\n    const reinitTimeout = setTimeout(() => {\r\n      if (mapRef.current && !map) {\r\n        // Trigger de reinicialización\r\n        setMap(null);\r\n      }\r\n    }, 100);\r\n\r\n    return () => clearTimeout(reinitTimeout);\r\n  }\r\n}, [currentStep, map]);\r\n\r\n  // Reemplaza la función getCurrentLocation con esta versión mejorada:\r\n\r\nconst getCurrentLocation = () => {\r\n  setLoading(true);\r\n  setError(''); // Limpiar errores anteriores\r\n  \r\n  if (!navigator.geolocation) {\r\n    setError('La geolocalización no está soportada en este navegador');\r\n    setLoading(false);\r\n    return;\r\n  }\r\n\r\n  navigator.geolocation.getCurrentPosition(\r\n    async (position) => {\r\n      try {\r\n        const lat = position.coords.latitude;\r\n        const lng = position.coords.longitude;\r\n\r\n        // Verificar que el mapa existe y está listo\r\n        if (!map || !window.L) {\r\n          setError('El mapa no está disponible. Intenta recargar la página.');\r\n          setLoading(false);\r\n          return;\r\n        }\r\n\r\n        // Verificar que el mapa tiene el método setView\r\n        if (typeof map.setView !== 'function') {\r\n          setError('Error en la inicialización del mapa. Intenta recargar la página.');\r\n          setLoading(false);\r\n          return;\r\n        }\r\n\r\n        // Actualizar vista del mapa\r\n        map.setView([lat, lng], 15);\r\n        \r\n        // Remover marcador anterior si existe\r\n        if (marker && map.hasLayer && map.hasLayer(marker)) {\r\n          map.removeLayer(marker);\r\n        }\r\n        \r\n        // Crear nuevo marcador\r\n        const newMarker = window.L.marker([lat, lng]).addTo(map);\r\n        setMarker(newMarker);\r\n        \r\n        // Obtener dirección con manejo de errores mejorado\r\n        try {\r\n          const response = await fetch(\r\n            `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&addressdetails=1`,\r\n            { timeout: 10000 } // 10 segundos timeout\r\n          );\r\n          \r\n          if (!response.ok) {\r\n            throw new Error(`HTTP ${response.status}`);\r\n          }\r\n          \r\n          const data = await response.json();\r\n          \r\n          if (data && data.display_name) {\r\n            setLocation(prev => ({\r\n              ...prev,\r\n              address: data.display_name,\r\n              coordinates: { lat, lng }\r\n            }));\r\n          } else {\r\n            // Fallback si no se puede obtener la dirección\r\n            setLocation(prev => ({\r\n              ...prev,\r\n              address: `Coordenadas: ${lat.toFixed(6)}, ${lng.toFixed(6)}`,\r\n              coordinates: { lat, lng }\r\n            }));\r\n          }\r\n        } catch (error) {\r\n          console.warn('Error al obtener dirección, usando coordenadas:', error);\r\n          setLocation(prev => ({\r\n            ...prev,\r\n            address: `Coordenadas: ${lat.toFixed(6)}, ${lng.toFixed(6)}`,\r\n            coordinates: { lat, lng }\r\n          }));\r\n        }\r\n        \r\n      } catch (error) {\r\n        console.error('Error al procesar ubicación:', error);\r\n        setError('Error al procesar la ubicación obtenida');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n    (error) => {\r\n      let errorMessage = 'No se pudo obtener la ubicación actual';\r\n      \r\n      switch (error.code) {\r\n        case error.PERMISSION_DENIED:\r\n          errorMessage = 'Permiso de ubicación denegado. Por favor, permite el acceso a tu ubicación.';\r\n          break;\r\n        case error.POSITION_UNAVAILABLE:\r\n          errorMessage = 'Información de ubicación no disponible.';\r\n          break;\r\n        case error.TIMEOUT:\r\n          errorMessage = 'Tiempo de espera agotado al obtener ubicación.';\r\n          break;\r\n        default:\r\n          errorMessage = 'Error desconocido al obtener ubicación.';\r\n          break;\r\n      }\r\n      \r\n      setError(errorMessage);\r\n      setLoading(false);\r\n    },\r\n    {\r\n      enableHighAccuracy: true,\r\n      timeout: 15000, // 15 segundos\r\n      maximumAge: 60000 // Cache por 1 minuto\r\n    }\r\n  );\r\n};\r\n\r\n\r\n   // Cargar medicamentos y drones desde la API\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Cargar medicamentos\r\n        const medicationsResponse = await fetch('http://localhost:8081/api/medicamentos');\r\n        const medicationsData = await medicationsResponse.json();\r\n        setMedications(medicationsData);\r\n\r\n        // Cargar drones disponibles\r\n        const dronesResponse = await fetch('http://localhost:8081/api/drones');\r\n        const dronesData = await dronesResponse.json();\r\n        setAvailableDrones(dronesData);\r\n\r\n      } catch (err) {\r\n        console.error('Error al cargar datos:', err);\r\n        setError('Error al cargar datos desde el servidor');\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  // FUNCIÓN CORREGIDA - Reemplaza la función assignDroneByPriority existente\r\nuseEffect(() => {\r\n  console.log('=== DEBUG MEDICAMENTOS CARGADOS ===');\r\n  console.log('medications array:', medications);\r\n  console.log('medications length:', medications.length);\r\n  \r\n  if (medications.length > 0) {\r\n    console.log('Estructura del primer medicamento:', JSON.stringify(medications[0], null, 2));\r\n    console.log('Campos disponibles:', Object.keys(medications[0]));\r\n  }\r\n}, [medications]);\r\n\r\nconst assignDroneByPriority = (priority) => {\r\n  console.log('=== INICIO DEBUG ASIGNACIÓN DRON ===');\r\n  console.log('Prioridad recibida:', priority);\r\n  console.log('availableDrones:', availableDrones);\r\n  \r\n  // Verificar si availableDrones está vacío o no es array\r\n  if (!availableDrones || !Array.isArray(availableDrones) || availableDrones.length === 0) {\r\n    console.error('❌ availableDrones está vacío o no es array válido');\r\n    return null;\r\n  }\r\n\r\n  // Mostrar información detallada de cada dron\r\n  console.log('--- ANÁLISIS DE DRONES DISPONIBLES ---');\r\n  availableDrones.forEach((drone, index) => {\r\n    console.log(`Dron ${index + 1}:`, {\r\n      id: drone.id,\r\n      identificador: drone.identificador,\r\n      modelo: drone.modelo,\r\n      capacidad_kg: drone.capacidadKg, // ⚠️ CORREGIDO: camelCase\r\n      nivel_bateria: drone.nivelBateria, // ⚠️ CORREGIDO: camelCase\r\n      // Verificar tipos de datos\r\n      tipo_bateria: typeof drone.nivelBateria,\r\n      valor_bateria_crudo: drone.nivelBateria\r\n    });\r\n  });\r\n\r\n  // FILTRO CORREGIDO - Usar nombres correctos de campos\r\n  const activeDrones = availableDrones.filter(drone => {\r\n    // Usar el nombre correcto del campo: nivelBateria (no nivel_bateria)\r\n    let bateria = 0;\r\n    \r\n    if (typeof drone.nivelBateria === 'string') {\r\n      // Si es string, remover caracteres no numéricos como '%' \r\n      bateria = parseInt(drone.nivelBateria.replace(/[^0-9]/g, '')) || 0;\r\n    } else if (typeof drone.nivelBateria === 'number') {\r\n      bateria = drone.nivelBateria;\r\n    }\r\n    \r\n    // Filtro realista ahora que tenemos los datos correctos\r\n    const bateriaMinima = 50; // Nivel mínimo real\r\n    const esValido = bateria >= bateriaMinima;\r\n    \r\n    console.log(`Dron ${drone.identificador || drone.id}: \r\n      - Batería cruda: \"${drone.nivelBateria}\" (${typeof drone.nivelBateria})\r\n      - Batería procesada: ${bateria}%\r\n      - Mínima requerida: ${bateriaMinima}%\r\n      - Resultado: ${esValido ? 'VÁLIDO ✅' : 'RECHAZADO ❌'}`);\r\n    \r\n    return esValido;\r\n  });\r\n\r\n  console.log(`Drones válidos encontrados: ${activeDrones.length}/${availableDrones.length}`);\r\n\r\n  if (activeDrones.length === 0) {\r\n    console.error('❌ NINGÚN DRON PASÓ EL FILTRO');\r\n    console.log('Intentando con filtro aún más permisivo...');\r\n    \r\n    // FILTRO DE EMERGENCIA - Aceptar cualquier dron\r\n    const emergencyDrones = availableDrones.filter(drone => {\r\n      const tieneId = drone.id && drone.identificador;\r\n      console.log(`Dron ${drone.identificador || 'sin_id'}: tiene datos básicos = ${tieneId}`);\r\n      return tieneId;\r\n    });\r\n    \r\n    if (emergencyDrones.length > 0) {\r\n      console.log('✅ Usando filtro de emergencia, drones encontrados:', emergencyDrones.length);\r\n      return emergencyDrones[0]; // Retornar el primer dron disponible\r\n    }\r\n    \r\n    console.error('❌ Incluso el filtro de emergencia falló');\r\n    return null;\r\n  }\r\n\r\n  // LÓGICA DE SELECCIÓN CORREGIDA - Usar nombres correctos\r\n  let selectedDrone;\r\n  \r\n  if (priority === 'alta') {\r\n    // Para prioridad alta: mayor capacidad y mejor batería\r\n    selectedDrone = activeDrones.reduce((best, current) => {\r\n      const bestCapacity = parseFloat(best.capacidadKg) || 0; // ⚠️ CORREGIDO\r\n      const currentCapacity = parseFloat(current.capacidadKg) || 0; // ⚠️ CORREGIDO\r\n      const bestBattery = parseInt(best.nivelBateria) || 0; // ⚠️ CORREGIDO\r\n      const currentBattery = parseInt(current.nivelBateria) || 0; // ⚠️ CORREGIDO\r\n      \r\n      // Priorizar capacidad, luego batería\r\n      if (currentCapacity > bestCapacity) return current;\r\n      if (currentCapacity === bestCapacity && currentBattery > bestBattery) return current;\r\n      return best;\r\n    });\r\n  } else if (priority === 'media') {\r\n    // Para prioridad media: balance entre capacidad y batería\r\n    selectedDrone = activeDrones.reduce((best, current) => {\r\n      const bestScore = (parseFloat(best.capacidadKg) || 0) + (parseInt(best.nivelBateria) || 0); // ⚠️ CORREGIDO\r\n      const currentScore = (parseFloat(current.capacidadKg) || 0) + (parseInt(current.nivelBateria) || 0); // ⚠️ CORREGIDO\r\n      return currentScore > bestScore ? current : best;\r\n    });\r\n  } else {\r\n    // Para prioridad baja: cualquier dron disponible (el primero)\r\n    selectedDrone = activeDrones[0];\r\n  }\r\n\r\n  console.log('✅ DRON SELECCIONADO:', {\r\n    id: selectedDrone.id,\r\n    identificador: selectedDrone.identificador,\r\n    modelo: selectedDrone.modelo,\r\n    capacidad_kg: selectedDrone.capacidadKg, // ⚠️ CORREGIDO\r\n    nivel_bateria: selectedDrone.nivelBateria, // ⚠️ CORREGIDO\r\n    prioridad_usada: priority\r\n  });\r\n\r\n  console.log('=== FIN DEBUG ASIGNACIÓN DRON ===');\r\n  return selectedDrone;\r\n};\r\n  // Manejar selección de medicamentos\r\n  // Reemplaza la función handleMedicationSelect con esta versión mejorada:\r\n\r\n// Reemplaza la función handleMedicationSelect con esta versión mejorada:\r\n\r\nconst handleMedicationSelect = (pain) => {\r\n  console.log('=== SELECCIONANDO MEDICAMENTO ===');\r\n  console.log('Dolor seleccionado:', pain);\r\n  \r\n  const existing = selectedMedications.find(item => item.pain === pain);\r\n  if (existing) {\r\n    console.log('Medicamento ya existe para este dolor');\r\n    return;\r\n  }\r\n\r\n  // Buscar medicamento en la base de datos\r\n  const medicationForPain = medications.find(med => {\r\n    // Verificar diferentes formas de coincidencia\r\n    if (med.nombre_comercial && med.nombre_comercial.toLowerCase().includes(pain.toLowerCase())) {\r\n      return true;\r\n    }\r\n    if (med.dolores && med.dolores.toLowerCase() === pain.toLowerCase()) {\r\n      return true;\r\n    }\r\n    if (med.indicaciones && med.indicaciones.toLowerCase().includes(pain.toLowerCase())) {\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  console.log('Medicamento encontrado:', medicationForPain);\r\n\r\n  if (medicationForPain) {\r\n    // Verificar que el medicamento tiene ID válido\r\n    if (!medicationForPain.id) {\r\n      console.error('❌ ERROR: El medicamento no tiene ID válido');\r\n      alert(`Error: El medicamento para ${pain} no tiene ID válido en la base de datos`);\r\n      return;\r\n    }\r\n    \r\n    const newMedicationItem = {\r\n      pain,\r\n      medication: {\r\n        id: medicationForPain.id, // ID real de la base de datos\r\n        nombre_comercial: medicationForPain.nombre_comercial,\r\n        forma_administracion: medicationForPain.forma_administracion,\r\n        dolencia: pain,\r\n        peso: medicationForPain.peso || 0.02\r\n      },\r\n      quantity: 1\r\n    };\r\n    \r\n    setSelectedMedications(prev => [...prev, newMedicationItem]);\r\n    console.log('✅ Medicamento agregado exitosamente');\r\n  } else {\r\n    // Si no se encuentra, mostrar mensaje y no agregar medicamento genérico\r\n    alert(`No se encontró un medicamento específico para \"${pain}\" en nuestra base de datos. Por favor, contacta con el administrador.`);\r\n    console.log('❌ No se encontró medicamento para:', pain);\r\n  }\r\n};\r\n  // Actualizar cantidad de medicamento\r\n  const updateMedicationQuantity = (pain, quantity) => {\r\n    const newQuantity = parseInt(quantity);\r\n    if (newQuantity > 0) {\r\n      setSelectedMedications(prev => \r\n        prev.map(item => \r\n          item.pain === pain ? { ...item, quantity: newQuantity } : item\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  // Remover medicamento\r\n  const removeMedication = (pain) => {\r\n    setSelectedMedications(prev => prev.filter(item => item.pain !== pain));\r\n  };\r\n\r\n  // REEMPLAZA la función handleSubmit completa con esta versión corregida:\r\n\r\n  // FUNCIÓN HANDLESUBMIT COMPLETAMENTE CORREGIDA - VERSIÓN FINAL\r\nconst handleSubmit = async () => {\r\n  console.log('=== INICIO HANDLE SUBMIT ===');\r\n  \r\n  if (!userInfo) {\r\n    console.error('❌ Usuario no autenticado');\r\n    setError('Usuario no autenticado');\r\n    return;\r\n  }\r\n\r\n  setLoading(true);\r\n  setError('');\r\n  \r\n  try {\r\n    // 1. VERIFICAR DATOS PREVIOS\r\n    console.log('--- Verificando datos antes de procesar ---');\r\n    console.log('selectedMedications:', JSON.stringify(selectedMedications, null, 2));\r\n    console.log('priority:', priority);\r\n    console.log('location:', JSON.stringify(location, null, 2));\r\n    console.log('userInfo:', JSON.stringify(userInfo, null, 2));\r\n    \r\n    if (!availableDrones || availableDrones.length === 0) {\r\n      throw new Error('No se han cargado los drones disponibles. Recarga la página e intenta de nuevo.');\r\n    }\r\n\r\n    // 2. ASIGNAR DRON\r\n    console.log('--- Llamando a assignDroneByPriority ---');\r\n    const assignedDrone = assignDroneByPriority(priority);\r\n    \r\n    if (!assignedDrone) {\r\n      throw new Error(`No hay drones disponibles en este momento con la prioridad ${priority}.`);\r\n    }\r\n\r\n    console.log('✅ Dron asignado exitosamente:', JSON.stringify(assignedDrone, null, 2));\r\n\r\n    // 3. VALIDAR IDs - CRÍTICO: CONVERTIR A NÚMEROS\r\n    const userId = parseInt(userInfo.id);\r\n    const droneId = parseInt(assignedDrone.id);\r\n    \r\n    console.log('=== VALIDACIÓN DE IDs ===');\r\n    console.log('userInfo.id (original):', userInfo.id, typeof userInfo.id);\r\n    console.log('userId (parseado):', userId, typeof userId);\r\n    console.log('assignedDrone.id (original):', assignedDrone.id, typeof assignedDrone.id);\r\n    console.log('droneId (parseado):', droneId, typeof droneId);\r\n    \r\n    if (isNaN(userId) || isNaN(droneId) || userId <= 0 || droneId <= 0) {\r\n      throw new Error(`IDs inválidos - Usuario: ${userId}, Dron: ${droneId}`);\r\n    }\r\n\r\n    // 4. CREAR SOLICITUD - ESTRUCTURA CORREGIDA PARA JPA\r\nconst solicitudData = {\r\n  // ✅ ENVIAR OBJETO USUARIO COMPLETO PARA JPA\r\n  usuario: {\r\n    id: userId\r\n  },\r\n  prioridad: priority.toLowerCase(),          // ✅ Enum en formato Java\r\n  destino: location.address,                    // ✅ texto libre\r\n  region: location.region.toLowerCase(),        // ✅ Enum en formato Java\r\n  estadoSolicitud: 'pendiente',                 // ✅ Enum en formato Java\r\n  dronAsignado: {\r\n    id: droneId\r\n  }\r\n  // ❌ No enviar fechaSolicitud → el backend la establece\r\n};\r\n\r\n\r\n    console.log('--- SOLICITUD: Enviando datos JPA FORMAT ---');\r\n    console.log('Datos a enviar:', JSON.stringify(solicitudData, null, 2));\r\n\r\n    const solicitudResponse = await fetch('http://localhost:8081/api/solicitudes', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      },\r\n      body: JSON.stringify(solicitudData),\r\n    });\r\n\r\n    console.log('Status solicitud response:', solicitudResponse.status);\r\n\r\n    if (!solicitudResponse.ok) {\r\n      const errorText = await solicitudResponse.text();\r\n      console.error('❌ Error en solicitud:', errorText);\r\n      console.error('Datos enviados:', JSON.stringify(solicitudData, null, 2));\r\n      throw new Error(`Error al crear solicitud: ${solicitudResponse.status} - ${errorText}`);\r\n    }\r\n\r\n    const solicitudCreada = await solicitudResponse.json();\r\n    console.log('✅ Solicitud creada exitosamente:', JSON.stringify(solicitudCreada, null, 2));\r\n\r\n    const solicitudId = parseInt(solicitudCreada.id);\r\n    if (isNaN(solicitudId)) {\r\n      throw new Error('ID de solicitud inválido recibido del servidor');\r\n    }\r\n\r\n    // 5. GUARDAR MEDICAMENTOS - ESTRUCTURA JPA CORREGIDA\r\n    console.log('--- MEDICAMENTOS: Procesando lista ---');\r\n\r\n    for (let i = 0; i < selectedMedications.length; i++) {\r\n      const item = selectedMedications[i];\r\n      \r\n      console.log(`\\n=== MEDICAMENTO ${i + 1} DEBUG ===`);\r\n      console.log('item completo:', JSON.stringify(item, null, 2));\r\n      \r\n      // VALIDACIONES CRÍTICAS\r\n      if (!item.medication || !item.medication.id) {\r\n        console.error('❌ ERROR: Medicamento sin ID válido');\r\n        throw new Error(`Medicamento ${i + 1} no tiene ID válido`);\r\n      }\r\n      \r\n      // Verificar que el medicamento existe en la base de datos\r\n      const medicamentoExiste = medications.find(med => med.id === item.medication.id);\r\n      if (!medicamentoExiste) {\r\n        console.error('❌ ERROR: Medicamento no existe en la base de datos');\r\n        throw new Error(`El medicamento con ID ${item.medication.id} no existe en la base de datos`);\r\n      }\r\n      \r\n      // ✅ ESTRUCTURA CORRECTA PARA JPA - Objetos completos\r\n      const medicamentoData = {\r\n        solicitud: {\r\n          id: solicitudId  // JPA espera un objeto con ID\r\n        },\r\n        medicamento: {\r\n          id: parseInt(item.medication.id)  // JPA espera un objeto con ID\r\n        },\r\n        cantidad: parseInt(item.quantity)\r\n      };\r\n\r\n      console.log('Datos medicamento (JPA format):', JSON.stringify(medicamentoData, null, 2));\r\n      \r\n      // Validar que los IDs son números válidos\r\n      if (isNaN(medicamentoData.solicitud.id) || isNaN(medicamentoData.medicamento.id)) {\r\n        throw new Error(`IDs inválidos - Solicitud: ${medicamentoData.solicitud.id}, Medicamento: ${medicamentoData.medicamento.id}`);\r\n      }\r\n\r\n      console.log(`Enviando medicamento ${i + 1} al servidor...`);\r\n      \r\n      try {\r\n        const medicamentoResponse = await fetch('http://localhost:8081/api/solicitud-medicamentos', {\r\n          method: 'POST',\r\n          headers: { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          },\r\n          body: JSON.stringify(medicamentoData),\r\n        });\r\n\r\n        console.log(`Status medicamento response: ${medicamentoResponse.status}`);\r\n        \r\n        if (!medicamentoResponse.ok) {\r\n          const errorText = await medicamentoResponse.text();\r\n          console.error(`❌ Error en medicamento ${i + 1}:`, errorText);\r\n          console.error('Datos enviados:', JSON.stringify(medicamentoData, null, 2));\r\n          \r\n          // Intentar parsear el error para obtener más información\r\n          try {\r\n            const errorJson = JSON.parse(errorText);\r\n            throw new Error(`Error del servidor: ${errorJson.message || errorJson.error || 'Error desconocido'}`);\r\n          } catch {\r\n            throw new Error(`Error al guardar medicamento: ${errorText}`);\r\n          }\r\n        }\r\n\r\n        const medicamentoGuardado = await medicamentoResponse.json();\r\n        console.log(`✅ Medicamento ${i + 1} guardado exitosamente:`, medicamentoGuardado);\r\n        \r\n      } catch (fetchError) {\r\n        console.error(`❌ Error de conexión en medicamento ${i + 1}:`, fetchError);\r\n        throw new Error(`Error de conexión al guardar medicamento: ${fetchError.message}`);\r\n      }\r\n    }\r\n\r\n    // 6. CREAR VUELO - ESTRUCTURA COMPLETAMENTE CORREGIDA PARA TU MODELO\r\n    console.log('--- VUELO: Preparando datos ---');\r\n    \r\n    const vueloData = {\r\n      // ✅ REFERENCIAS JPA CORRECTAS\r\n      solicitud: {\r\n        id: solicitudId\r\n      },\r\n      dron: {\r\n        id: droneId\r\n      },\r\n      // ✅ FECHA EN FORMATO ISO QUE JPA PUEDE MANEJAR\r\n      fechaInicio: new Date().toISOString(),\r\n      \r\n    };\r\n\r\n    console.log('--- VUELO: Enviando datos JPA FORMAT ---');\r\n    console.log('Datos vuelo:', JSON.stringify(vueloData, null, 2));\r\n\r\n    const vueloResponse = await fetch('http://localhost:8081/api/vuelos', {\r\n      method: 'POST',\r\n      headers: { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      },\r\n      body: JSON.stringify(vueloData),\r\n    });\r\n\r\n    console.log('Status vuelo response:', vueloResponse.status);\r\n\r\n    if (!vueloResponse.ok) {\r\n      const errorText = await vueloResponse.text();\r\n      console.error('❌ Error en vuelo:', errorText);\r\n      console.error('Datos vuelo enviados:', JSON.stringify(vueloData, null, 2));\r\n      \r\n      // Log adicional para debugging de vuelos\r\n      console.error('IDs utilizados:', { solicitudId, droneId });\r\n      \r\n      try {\r\n        const errorJson = JSON.parse(errorText);\r\n        throw new Error(`Error del servidor al crear vuelo: ${errorJson.message || errorJson.error || 'Error desconocido'}`);\r\n      } catch {\r\n        throw new Error(`Error al crear vuelo: ${vueloResponse.status} - ${errorText}`);\r\n      }\r\n    }\r\n\r\n    const vueloCreado = await vueloResponse.json();\r\n    console.log('✅ Vuelo creado exitosamente:', JSON.stringify(vueloCreado, null, 2));\r\n\r\n    // 7. ACTUALIZAR ESTADO DE LA SOLICITUD A 'ASIGNADA'\r\n    console.log('--- ACTUALIZANDO ESTADO SOLICITUD ---');\r\n    const updateSolicitudData = {\r\n      estadoSolicitud: 'asignada'  // ✅ camelCase para JPA\r\n    };\r\n\r\n    const updateResponse = await fetch(`http://localhost:8081/api/solicitudes/${solicitudId}`, {\r\n      method: 'PUT',\r\n      headers: { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      },\r\n      body: JSON.stringify(updateSolicitudData),\r\n    });\r\n\r\n    if (updateResponse.ok) {\r\n      console.log('✅ Estado de solicitud actualizado a \"asignada\"');\r\n    } else {\r\n      console.warn('⚠️ No se pudo actualizar el estado de la solicitud, pero continuando...');\r\n    }\r\n\r\n    // 8. MOSTRAR ÉXITO CON DETALLES COMPLETOS\r\n    const totalMedicamentos = selectedMedications.reduce((total, item) => total + item.quantity, 0);\r\n    \r\n    alert(`\r\n🎉 ¡SOLICITUD ENVIADA EXITOSAMENTE!\r\n\r\n📋 DETALLES DE LA SOLICITUD:\r\n   • ID Solicitud: ${solicitudCreada.id}\r\n   • Estado: Asignada y procesándose\r\n\r\n👤 USUARIO:\r\n   • ${userInfo.name}\r\n   • ID Usuario: ${userId} ✅\r\n\r\n🚁 DRON ASIGNADO:\r\n   • ${assignedDrone.identificador}\r\n   • ID Dron: ${droneId} ✅\r\n   • Modelo: ${assignedDrone.modelo}\r\n   • Batería: ${assignedDrone.nivelBateria}%\r\n   • Capacidad: ${assignedDrone.capacidadKg} kg\r\n\r\n📍 DESTINO:\r\n   • Región: ${regions.find(r => r.value === location.region)?.label}\r\n   • Dirección: ${location.address}\r\n\r\n💊 MEDICAMENTOS:\r\n   • ${selectedMedications.length} tipos diferentes\r\n   • ${totalMedicamentos} unidades totales\r\n   • Todos guardados correctamente ✅\r\n\r\n⚡ PRIORIDAD: ${priority.toUpperCase()}\r\n\r\n🛫 VUELO:\r\n   • ID Vuelo: ${vueloCreado.id} ✅\r\n   • Solicitud ID: ${solicitudId} ✅\r\n   • Dron ID: ${droneId} ✅\r\n   • Fecha inicio: ${new Date().toLocaleString()} ✅\r\n   • Estado: Programado\r\n\r\nEl dron se dirigirá a tu ubicación pronto. ¡Gracias por usar nuestro servicio!\r\n    `);\r\n    \r\n    // 9. RESETEAR FORMULARIO\r\n    setCurrentStep(1);\r\n    setLocation({ region: '', address: '', coordinates: null, confirmed: false });\r\n    setSelectedMedications([]);\r\n    setPriority('');\r\n    \r\n  } catch (err) {\r\n    console.error('❌ Error completo en handleSubmit:', err);\r\n    setError(`Error al procesar la solicitud: ${err.message}`);\r\n    \r\n    // Log adicional para debugging\r\n    console.error('Stack completo:', err.stack);\r\n    console.error('Estado actual:', {\r\n      userInfo,\r\n      selectedMedications: selectedMedications.length,\r\n      priority,\r\n      location: location.address ? 'configurada' : 'no configurada',\r\n      availableDrones: availableDrones.length\r\n    });\r\n  } finally {\r\n    setLoading(false);\r\n    console.log('=== FIN HANDLE SUBMIT ===');\r\n  }\r\n};\r\n\r\n  const nextStep = () => {\r\n    if (currentStep < 4) {\r\n      setCurrentStep(currentStep + 1);\r\n    }\r\n  };\r\n\r\n  const prevStep = () => {\r\n    if (currentStep > 1) {\r\n      setCurrentStep(currentStep - 1);\r\n    }\r\n  };\r\n\r\n  const canProceedStep1 = location.region && location.address && location.confirmed;\r\n  const canProceedStep2 = selectedMedications.length > 0;\r\n  const canProceedStep3 = priority;\r\n\r\n  // Mostrar error si no está autenticado\r\n  if (!userInfo) {\r\n    return (\r\n      <div className=\"medical-form-container\">\r\n        <div className=\"form-container\">\r\n          <div className=\"error-message\">\r\n            ⚠️ Usuario no autenticado. Por favor, inicia sesión para continuar.\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n   return (\r\n    <div className=\"medical-form-container\">\r\n      <div className=\"form-container\">\r\n        <div className=\"header\">\r\n          <h1 className=\"title\">Solicitud de Medicamentos</h1>\r\n          <div className=\"user-info\" style={{marginBottom: '10px', padding: '10px', backgroundColor: '#f0f8ff', borderRadius: '5px'}}>\r\n            👤 Bienvenido, <strong>{userInfo.name}</strong> | 📧 {userInfo.email}\r\n          </div>\r\n          <div className=\"progress-bar\">\r\n            {[1, 2, 3, 4].map(step => (\r\n              <div\r\n                key={step}\r\n                className={`progress-step ${step <= currentStep ? 'active' : ''}`}\r\n              >\r\n                {step}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"error-message\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n\r\n\r\n         {/* Paso 1: Ubicación */}\r\n        {currentStep === 1 && (\r\n          <div className=\"step-container\">\r\n            <h2 className=\"step-title\">Selecciona tu Ubicación</h2>\r\n            \r\n            <div className=\"region-selector\">\r\n              <label className=\"label\">Región:</label>\r\n              <select\r\n                value={location.region}\r\n                onChange={(e) => setLocation(prev => ({ ...prev, region: e.target.value }))}\r\n                className=\"select\"\r\n              >\r\n                <option value=\"\">Selecciona una región</option>\r\n                {regions.map(region => (\r\n                  <option key={region.value} value={region.value}>\r\n                    {region.label}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"map-container\">\r\n              <div className=\"map-controls\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={getCurrentLocation}\r\n                  disabled={loading}\r\n                  className=\"location-button\"\r\n                >\r\n                  {loading ? 'Obteniendo ubicación...' : 'Usar mi ubicación actual'}\r\n                </button>\r\n                <p className=\"map-instructions\">\r\n                  📍 Haz clic en el mapa para seleccionar tu ubicación de entrega\r\n                </p>\r\n              </div>\r\n              \r\n              <div ref={mapRef} className=\"map\"></div>\r\n              \r\n              {location.address && (\r\n                <div className=\"address-confirmation\">\r\n                  <p className=\"address-text\">\r\n                    <strong>Dirección seleccionada:</strong><br />\r\n                    {location.address}\r\n                  </p>\r\n                  <div className=\"confirmation-buttons\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => setLocation(prev => ({ ...prev, confirmed: true }))}\r\n                      className={`button ${location.confirmed ? 'confirmed-button' : 'confirm-button'}`}\r\n                    >\r\n                      {location.confirmed ? '✓ Confirmado' : 'Confirmar ubicación'}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"navigation-buttons\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={nextStep}\r\n                disabled={!canProceedStep1}\r\n                className={`button next-button ${!canProceedStep1 ? 'disabled-button' : ''}`}\r\n              >\r\n                Siguiente\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n         {/* Paso 2: Selección de Medicamentos */}\r\n        {currentStep === 2 && (\r\n          <div className=\"step-container\">\r\n            <h2 className=\"step-title\">Selecciona tus Medicamentos</h2>\r\n            \r\n            {medications.length === 0 && (\r\n              <div className=\"debug-info\" style={{padding: '10px', backgroundColor: '#fff3cd', marginBottom: '10px', borderRadius: '5px'}}>\r\n                <p>⚠️ Cargando medicamentos desde la base de datos...</p>\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"pain-selector\">\r\n              <label className=\"label\">¿Qué dolencias tienes?</label>\r\n              <div className=\"pain-grid\">\r\n                {availablePains.map(pain => (\r\n                  <button\r\n                    key={pain}\r\n                    type=\"button\"\r\n                    onClick={() => handleMedicationSelect(pain)}\r\n                    disabled={selectedMedications.some(item => item.pain === pain)}\r\n                    className={`pain-button ${selectedMedications.some(item => item.pain === pain) ? 'selected' : ''}`}\r\n                  >\r\n                    {pain}\r\n                    {selectedMedications.some(item => item.pain === pain) && (\r\n                      <span style={{marginLeft: '5px'}}>✓</span>\r\n                    )}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {selectedMedications.length > 0 && (\r\n              <div className=\"selected-medications\">\r\n                <h3 className=\"subtitle\">Medicamentos Seleccionados:</h3>\r\n                {selectedMedications.map(item => (\r\n                  <div key={item.pain} className=\"medication-item\">\r\n                    <div className=\"medication-info\">\r\n                      <strong>{item.medication.nombre_comercial || item.medication.nombreComercial}</strong>\r\n                      <span className=\"medication-pain\">Para: {item.pain}</span>\r\n                      <span className=\"medication-form\">\r\n                        Forma: {item.medication.forma_administracion || item.medication.formaAdministracion}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"quantity-controls\">\r\n                      <label className=\"quantity-label\">Cantidad:</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        min=\"1\"\r\n                        max=\"10\"\r\n                        value={item.quantity}\r\n                        onChange={(e) => updateMedicationQuantity(item.pain, e.target.value)}\r\n                        className=\"quantity-input\"\r\n                      />\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => removeMedication(item.pain)}\r\n                        className=\"remove-button\"\r\n                      >\r\n                        ✕\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"navigation-buttons\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={prevStep}\r\n                className=\"button prev-button\"\r\n              >\r\n                Anterior\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={nextStep}\r\n                disabled={!canProceedStep2}\r\n                className={`button next-button ${!canProceedStep2 ? 'disabled-button' : ''}`}\r\n              >\r\n                Siguiente ({selectedMedications.length} medicamento{selectedMedications.length !== 1 ? 's' : ''} seleccionado{selectedMedications.length !== 1 ? 's' : ''})\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Paso 3: Prioridad */}\r\n        {currentStep === 3 && (\r\n          <div className=\"step-container\">\r\n            <h2 className=\"step-title\">Selecciona la Prioridad</h2>\r\n            \r\n            <div className=\"priority-selector\">\r\n              {[\r\n                { \r\n                  value: 'alta', \r\n                  label: 'Alta', \r\n                  description: 'Urgente - Asignación de dron premium con mayor capacidad', \r\n                  color: '#ff4757',\r\n                  details: '🚁 Dron de alta capacidad • ⚡ Batería 70%+ • 🎯 Entrega inmediata'\r\n                },\r\n                { \r\n                  value: 'media', \r\n                  label: 'Media', \r\n                  description: 'Moderada - Asignación de dron estándar', \r\n                  color: '#ffa502',\r\n                  details: '🚁 Dron estándar • ⚡ Batería 60%+ • 🕐 Entrega en pocas horas'\r\n                },\r\n                { \r\n                  value: 'baja', \r\n                  label: 'Baja', \r\n                  description: 'No urgente - Cualquier dron disponible', \r\n                  color: '#2ed573',\r\n                  details: '🚁 Cualquier dron • ⚡ Batería 50%+ • 📅 Entrega dentro del día'\r\n                }\r\n              ].map(option => (\r\n                <div\r\n                  key={option.value}\r\n                  onClick={() => setPriority(option.value)}\r\n                  className={`priority-option ${priority === option.value ? 'selected' : ''}`}\r\n                  style={{ borderLeft: `4px solid ${option.color}` }}\r\n                >\r\n                  <div className=\"priority-header\">\r\n                    <span className=\"priority-label\">{option.label}</span>\r\n                    {priority === option.value && <span className=\"checkmark\">✓</span>}\r\n                  </div>\r\n                  <p className=\"priority-description\">{option.description}</p>\r\n                  <small style={{color: '#666', fontSize: '12px'}}>{option.details}</small>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"navigation-buttons\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={prevStep}\r\n                className=\"button prev-button\"\r\n              >\r\n                Anterior\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={nextStep}\r\n                disabled={!canProceedStep3}\r\n                className={`button next-button ${!canProceedStep3 ? 'disabled-button' : ''}`}\r\n              >\r\n                Siguiente\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Paso 4: Resumen y Confirmación */}\r\n        {currentStep === 4 && (\r\n          <div className=\"step-container\">\r\n            <h2 className=\"step-title\">Confirma tu Solicitud</h2>\r\n            \r\n            <div className=\"summary\">\r\n              <div className=\"summary-section\">\r\n                <h3 className=\"summary-title\">👤 Solicitante</h3>\r\n                <p className=\"summary-text\">\r\n                  <strong>Nombre:</strong> {userInfo.name}<br />\r\n                  <strong>Email:</strong> {userInfo.email}<br />\r\n                  <strong>ID Usuario:</strong> {userInfo.id}\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"summary-section\">\r\n                <h3 className=\"summary-title\">📍 Ubicación de Entrega</h3>\r\n                <p className=\"summary-text\">\r\n                  <strong>Región:</strong> {regions.find(r => r.value === location.region)?.label}<br />\r\n                  <strong>Dirección:</strong> {location.address}\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"summary-section\">\r\n                <h3 className=\"summary-title\">💊 Medicamentos Solicitados</h3>\r\n                {selectedMedications.map(item => (\r\n                  <div key={item.pain} className=\"summary-medication\">\r\n                    <strong>{item.medication.nombre_comercial || item.medication.nombreComercial}</strong> - Cantidad: {item.quantity}<br />\r\n                    <small>Para: {item.pain} | Forma: {item.medication.forma_administracion || item.medication.formaAdministracion}</small>\r\n                  </div>\r\n                ))}\r\n                <p><strong>Total medicamentos:</strong> {selectedMedications.reduce((total, item) => total + item.quantity, 0)}</p>\r\n              </div>\r\n\r\n              <div className=\"summary-section\">\r\n                <h3 className=\"summary-title\">⚡ Prioridad y Asignación</h3>\r\n                <p className=\"summary-text\">\r\n                  <span className={`priority-badge ${priority}`}>\r\n                    {priority === 'alta' ? 'Alta' : priority === 'media' ? 'Media' : 'Baja'}\r\n                  </span>\r\n                  <br />\r\n                  <small>Se asignará automáticamente el mejor dron disponible según tu prioridad</small>\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"navigation-buttons\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={prevStep}\r\n                className=\"button prev-button\"\r\n              >\r\n                Anterior\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleSubmit}\r\n                disabled={loading}\r\n                className=\"button submit-button\"\r\n              >\r\n                {loading ? 'Enviando solicitud y asignando dron...' : 'Enviar Solicitud'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicalRequestForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}