{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gv250\\\\OneDrive\\\\Escritorio\\\\DronMedico\\\\Frontend\\\\src\\\\components\\\\Alertas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\n\n// Lista de alertas\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst alertas = [{\n  tipo: \"Clim√°tica\",\n  mensaje: \"üö® Lluvia moderada en la ruta de vuelo. Se recomienda retrasar el despegue hasta nuevo aviso.\",\n  severidad: \"media\"\n}, {\n  tipo: \"Clim√°tica\",\n  mensaje: \"‚òÄÔ∏è Condiciones √≥ptimas. Cielo despejado y sin viento. Vuelo autorizado.\",\n  severidad: \"baja\"\n}, {\n  tipo: \"Clim√°tica\",\n  mensaje: \"üå™Ô∏è Vientos fuertes detectados en zona de monta√±a. Riesgo alto de desviaci√≥n del dron.\",\n  severidad: \"alta\"\n}, {\n  tipo: \"Clim√°tica\",\n  mensaje: \"üå´Ô∏è Neblina densa en ruta. Visibilidad reducida al 40%. Se recomienda espera.\",\n  severidad: \"alta\"\n}, {\n  tipo: \"Infraestructura\",\n  mensaje: \"üöß Camino de aterrizaje rural obstruido por deslizamiento. Verifique punto de entrega alterno.\",\n  severidad: \"media\"\n}, {\n  tipo: \"Bater√≠a\",\n  mensaje: \"üîã Nivel de bater√≠a insuficiente para trayecto completo. Cargue al menos al 90% antes del env√≠o.\",\n  severidad: \"alta\"\n}, {\n  tipo: \"Clim√°tica\",\n  mensaje: \"üå§Ô∏è Nubosidad parcial sin impacto en vuelo. Precauci√≥n est√°ndar.\",\n  severidad: \"baja\"\n}, {\n  tipo: \"Comunicaci√≥n\",\n  mensaje: \"üì° P√©rdida intermitente de se√±al GPS en zona rural. Se recomienda reforzar la antena o esperar.\",\n  severidad: \"media\"\n}, {\n  tipo: \"Clim√°tica\",\n  mensaje: \"‚õàÔ∏è Tormenta el√©ctrica pronosticada en las pr√≥ximas 2 horas. Todos los vuelos deben cancelarse temporalmente.\",\n  severidad: \"cr√≠tica\"\n}, {\n  tipo: \"T√©cnica\",\n  mensaje: \"‚ö†Ô∏è Sensor de altitud presenta lecturas inestables. Revisi√≥n t√©cnica obligatoria antes del vuelo.\",\n  severidad: \"alta\"\n}];\n\n// Componente de alerta din√°mica\nconst AlertasClimaticas = () => {\n  _s();\n  const [alertaActual, setAlertaActual] = useState(null);\n  useEffect(() => {\n    const cambiarAlerta = () => {\n      const aleatoria = alertas[Math.floor(Math.random() * alertas.length)];\n      setAlertaActual(aleatoria);\n    };\n    cambiarAlerta();\n    const intervalo = setInterval(cambiarAlerta, 5000);\n    return () => clearInterval(intervalo);\n  }, []);\n  if (!alertaActual) return null;\n  const colorPorSeveridad = {\n    baja: '#d4edda',\n    media: '#fff3cd',\n    alta: '#f8d7da',\n    cr√≠tica: '#f5c6cb'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: colorPorSeveridad[alertaActual.severidad],\n      padding: '15px',\n      borderRadius: '8px',\n      margin: '10px auto',\n      fontWeight: 'bold',\n      textAlign: 'center',\n      width: '80%',\n      maxWidth: '600px',\n      boxShadow: '0 2px 6px rgba(0,0,0,0.2)',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: alertaActual.mensaje\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n// Montar el componente en el DOM\n_s(AlertasClimaticas, \"5WIWVIGFYOF9mLEkHbEFvPepb/E=\");\n_c = AlertasClimaticas;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(AlertasClimaticas, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 104,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"AlertasClimaticas\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","jsxDEV","_jsxDEV","alertas","tipo","mensaje","severidad","AlertasClimaticas","_s","alertaActual","setAlertaActual","cambiarAlerta","aleatoria","Math","floor","random","length","intervalo","setInterval","clearInterval","colorPorSeveridad","baja","media","alta","cr√≠tica","style","backgroundColor","padding","borderRadius","margin","fontWeight","textAlign","width","maxWidth","boxShadow","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","root","createRoot","document","getElementById","render","$RefreshReg$"],"sources":["C:/Users/gv250/OneDrive/Escritorio/DronMedico/Frontend/src/components/Alertas.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n\r\n// Lista de alertas\r\nconst alertas = [\r\n  {\r\n    tipo: \"Clim√°tica\",\r\n    mensaje: \"üö® Lluvia moderada en la ruta de vuelo. Se recomienda retrasar el despegue hasta nuevo aviso.\",\r\n    severidad: \"media\"\r\n  },\r\n  {\r\n    tipo: \"Clim√°tica\",\r\n    mensaje: \"‚òÄÔ∏è Condiciones √≥ptimas. Cielo despejado y sin viento. Vuelo autorizado.\",\r\n    severidad: \"baja\"\r\n  },\r\n  {\r\n    tipo: \"Clim√°tica\",\r\n    mensaje: \"üå™Ô∏è Vientos fuertes detectados en zona de monta√±a. Riesgo alto de desviaci√≥n del dron.\",\r\n    severidad: \"alta\"\r\n  },\r\n  {\r\n    tipo: \"Clim√°tica\",\r\n    mensaje: \"üå´Ô∏è Neblina densa en ruta. Visibilidad reducida al 40%. Se recomienda espera.\",\r\n    severidad: \"alta\"\r\n  },\r\n  {\r\n    tipo: \"Infraestructura\",\r\n    mensaje: \"üöß Camino de aterrizaje rural obstruido por deslizamiento. Verifique punto de entrega alterno.\",\r\n    severidad: \"media\"\r\n  },\r\n  {\r\n    tipo: \"Bater√≠a\",\r\n    mensaje: \"üîã Nivel de bater√≠a insuficiente para trayecto completo. Cargue al menos al 90% antes del env√≠o.\",\r\n    severidad: \"alta\"\r\n  },\r\n  {\r\n    tipo: \"Clim√°tica\",\r\n    mensaje: \"üå§Ô∏è Nubosidad parcial sin impacto en vuelo. Precauci√≥n est√°ndar.\",\r\n    severidad: \"baja\"\r\n  },\r\n  {\r\n    tipo: \"Comunicaci√≥n\",\r\n    mensaje: \"üì° P√©rdida intermitente de se√±al GPS en zona rural. Se recomienda reforzar la antena o esperar.\",\r\n    severidad: \"media\"\r\n  },\r\n  {\r\n    tipo: \"Clim√°tica\",\r\n    mensaje: \"‚õàÔ∏è Tormenta el√©ctrica pronosticada en las pr√≥ximas 2 horas. Todos los vuelos deben cancelarse temporalmente.\",\r\n    severidad: \"cr√≠tica\"\r\n  },\r\n  {\r\n    tipo: \"T√©cnica\",\r\n    mensaje: \"‚ö†Ô∏è Sensor de altitud presenta lecturas inestables. Revisi√≥n t√©cnica obligatoria antes del vuelo.\",\r\n    severidad: \"alta\"\r\n  }\r\n];\r\n\r\n// Componente de alerta din√°mica\r\nconst AlertasClimaticas = () => {\r\n  const [alertaActual, setAlertaActual] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const cambiarAlerta = () => {\r\n      const aleatoria = alertas[Math.floor(Math.random() * alertas.length)];\r\n      setAlertaActual(aleatoria);\r\n    };\r\n\r\n    cambiarAlerta();\r\n    const intervalo = setInterval(cambiarAlerta, 5000);\r\n    return () => clearInterval(intervalo);\r\n  }, []);\r\n\r\n  if (!alertaActual) return null;\r\n\r\n  const colorPorSeveridad = {\r\n    baja: '#d4edda',\r\n    media: '#fff3cd',\r\n    alta: '#f8d7da',\r\n    cr√≠tica: '#f5c6cb'\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: colorPorSeveridad[alertaActual.severidad],\r\n        padding: '15px',\r\n        borderRadius: '8px',\r\n        margin: '10px auto',\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n        width: '80%',\r\n        maxWidth: '600px',\r\n        boxShadow: '0 2px 6px rgba(0,0,0,0.2)',\r\n        fontFamily: 'Arial, sans-serif'\r\n      }}\r\n    >\r\n      {alertaActual.mensaje}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Montar el componente en el DOM\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<AlertasClimaticas />);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}